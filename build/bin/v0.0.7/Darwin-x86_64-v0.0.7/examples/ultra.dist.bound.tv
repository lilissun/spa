@decl @event initFar(*, -) @group p;
@decl @event initNear(*, -) @group p;
@decl @event accept(-, -) @group c;
@decl @event far(*, -) @group far;
@decl @event near(*, -) @group near;
@decl @event normalSend(*, -) @group normalSend;
@decl @event ultraRecv(*, -) @group ultraRecv;
@decl @event ultraNearSend(*, -) @group ultraNearSend;
@decl @event ultraFarSend(*, -) @group ultraFarSend;

@decl @func sign/2;
@decl @func pk/1;

@nosel initFar;
@nosel initNear;
@nosel accept;

@provide far(mx, #t);
@provide far(#c, #t);
@provide far(#t, #t);

///////////// near node /////////////
// normal channel
@rule near(m, #t1) -> normalSend(m, #t) : #t1 - #t <= 0;
@rule normalSend(m, #t1) -> near(m, #t) : #t1 - #t <= 0;
// ultrasound channel
@rule near(m, #t1) -> ultraNearSend(m, #t) : #t1 - #t <= 0;
@rule ultraNearSend(m, #ta) -> ultraRecv(m, #tb): #tb - #ta >= 1;

///////////// far node /////////////
@rule far(sk, #t1) -> far(pk(sk), #t) : #t1 - #t <= 0;
@rule far(m, #t1), far(sk, #t2) -> far(sign(m, sk), #t) : #t1 - #t <= 0, #t2 - #t <= 0;
@rule far(sign(m, sk), #t1) -> far(m, #t) : #t1 - #t <= 0;
// normal channel
@rule far(m, #t1) -> normalSend(m, #t) : #t1 - #t <= 0;
@rule normalSend(m, #t1) -> far(m, #t) : #t1 - #t <= 0;
// ultrasound channel
@rule far(m, #t1) -> ultraFarSend(m, #t) : #t1 - #t <= 0;
@rule ultraFarSend(m, #ta) -> ultraRecv(m, #tb): #tb - #ta >= 10;

@rule near(skB[], #t);
@rule far(skB[], #t);

@rule initFar([na], #ta) -> far([na], #t) : #ta - #t <= 0;
@rule initNear([na], #ta) -> near([na], #t) : #ta - #t <= 0;
@rule initFar([na], #ta), ultraRecv(sign([na], skB[]), #tb) -> accept([na], #tb) : #tb - #ta <= 2;
@rule initNear([na], #ta), ultraRecv(sign([na], skB[]), #tb) -> accept([na], #tb) : #tb - #ta <= 2;

@query accept(na, #tb) <- initNear(na, #ta);