! <sk, #t1> -> <pk(sk), #t> : #t1 - #t <= 0;

! <m, #t1>, <sk, #t2> -> <sign(m, sk), #t> : #t1 - #t <= 0, #t2 - #t <= 0;
! <sign(m, sk), #t1> -> <m, #t> : #t1 - #t <= 0;

! <m, #t1>, <pk(sk), #t2> -> <aenc(m, pk(sk)), #t> : #t1 - #t <= 0, #t2 - #t <= 0;
! <sk, #t1>, <aenc(m, pk(sk)), #t2> -> <m, #t> : #t1 - #t <= 0, #t2 - #t <= 0;

! <x, #t1>, <y, #t2>, <z, #t3>, <k, #t4>, <l, #t5> -> <tuple5(x, y, z, k, l), #t> 
: #t1 - #t <= 0, #t2 - #t <= 0, #t3 - #t <= 0, #t4 - #t <= 0, #t5 - #t <= 0;
! <tuple5(x, y, z, k, l), #t1> -> <x, #t> : #t1 - #t <= 0;
! <tuple5(x, y, z, k, l), #t1> -> <y, #t> : #t1 - #t <= 0;
! <tuple5(x, y, z, k, l), #t1> -> <z, #t> : #t1 - #t <= 0;
! <tuple5(x, y, z, k, l), #t1> -> <k, #t> : #t1 - #t <= 0;
! <tuple5(x, y, z, k, l), #t1> -> <l, #t> : #t1 - #t <= 0;

! <A[], #t>;
! <B[], #t>;

! <pk(skA[]), #t>;
! <pk(skB[]), #t>;


! init(skA[], skR, #ta, [Na]) 
    -> <sign(tuple5(#ta, [Na], pk(skR), X(pk(skR)), aenc(Y(pk(skR)), pk(skR))), skA[]), #ta>;

! <sign(tuple5(#ta, Na, pk(skB[]), X(pk(skB[])), aenc(Y(pk(skB[])), pk(skB[]))), skI), #t1>
    -> accept(skI, skB[], #t, Na);

? accept(skI, skR, #t, Na) <- init(skI, skR, #ta, Na);

